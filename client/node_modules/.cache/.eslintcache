[{"/Users/apple/Desktop/cloud_infra_final_project/client/src/index.js":"1","/Users/apple/Desktop/cloud_infra_final_project/client/src/reportWebVitals.js":"2","/Users/apple/Desktop/cloud_infra_final_project/client/src/App.js":"3","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/LoadPage.js":"4","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/LoadEnginePage.js":"5","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/SelectionPage.js":"6","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/SearchPage.js":"7","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/SearchResultPage.js":"8","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/TopNPage.js":"9","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/InvertedIndicesPage.js":"10","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/TopNResultPage.js":"11"},{"size":500,"mtime":1635729837300,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1635729837301,"results":"14","hashOfConfig":"13"},{"size":1295,"mtime":1638140536963,"results":"15","hashOfConfig":"13"},{"size":819,"mtime":1638140665409,"results":"16","hashOfConfig":"13"},{"size":802,"mtime":1638140774654,"results":"17","hashOfConfig":"13"},{"size":1363,"mtime":1638141770196,"results":"18","hashOfConfig":"13"},{"size":978,"mtime":1638148653750,"results":"19","hashOfConfig":"13"},{"size":4026,"mtime":1638159283311,"results":"20","hashOfConfig":"13"},{"size":1005,"mtime":1638149296015,"results":"21","hashOfConfig":"13"},{"size":1049,"mtime":1638159202851,"results":"22","hashOfConfig":"13"},{"size":1954,"mtime":1638159166141,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1trkbbv",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/apple/Desktop/cloud_infra_final_project/client/src/index.js",[],"/Users/apple/Desktop/cloud_infra_final_project/client/src/reportWebVitals.js",[],"/Users/apple/Desktop/cloud_infra_final_project/client/src/App.js",["51","52"],"import logo from './logo.svg';\nimport './App.css';\nimport { LoadPage } from './pages/LoadPage';\nimport { LoadEnginePage } from './pages/LoadEnginePage';\nimport { SelectionPage } from './pages/SelectionPage';\nimport { SearchPage } from './pages/SearchPage';\nimport { SearchResultPage } from './pages/SearchResultPage';\nimport { TopNPage } from './pages/TopNPage';\nimport { InvertedIndicesPage } from './pages/InvertedIndicesPage';\nimport { TopNResultPage } from './pages/TopNResultPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path='/' component={LoadPage}/>\n          <Route exact path='/load_engine' component={LoadEnginePage}/>\n          <Route exact path='/select' component={SelectionPage} />\n          <Route exact path='/search' component={SearchPage} />\n          <Route exact path='/search_result' component={SearchResultPage} />\n          <Route exact path='/top_n' component={TopNPage} />\n          <Route exact path='/inverted_indices' component={InvertedIndicesPage} />\n          <Route exact path='/top_n_result' component={TopNResultPage} />\n        </Switch>\n      </Router>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/LoadPage.js",[],"/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/LoadEnginePage.js",[],"/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/SelectionPage.js",[],"/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/SearchPage.js",[],"/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/SearchResultPage.js",["53","54"],"import React, { useState, useEffect } from 'react';\nimport { Typography, TableContainer, Table, TableBody, TableHead, TableCell, TableRow, Paper } from '@mui/material';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const SearchResultPage = () => {\n    const [frequency, setFrequency] = useState('');\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n    const term = query.get('term');\n    const getFrequency = async () => {\n        const body = { term }\n        const content = JSON.stringify(body)\n        const res = await fetch('http://127.0.0.1:5000/search', {\n            method: 'POST',\n            body: content,\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json'\n            }\n        }).then(response => response.json())\n        setFrequency(res);\n    }\n\n    \n    useEffect(() => {\n        getFrequency()\n    }, [])\n\n    function createData(Doc_ID, Doc_Folder, Doc_Name, Frenquencies) {\n        return { Doc_ID, Doc_Folder, Doc_Name, Frenquencies };\n    }\n    const columns = [\n        { id: 'Doc_ID', label: 'Doc\\u00a0ID', minWidth: 170 },\n        { id: 'Doc_Folder', label: 'Doc\\u00a0Folder', minWidth: 100 },\n        {\n            id: 'Doc_Name',\n            label: 'Doc\\u00a0Name',\n            minWidth: 170,\n        },\n        {\n            id: 'Frenquencies',\n            label: 'Frenquencies',\n            minWidth: 170,\n        },\n    ];\n    const rows = [\n        createData(1, 'histories', '1kinghenryiv', frequency),\n        createData(2, 'histories', '1kinghenryiv', frequency),\n        createData(3, 'histories', '2kinghenryiv', frequency),\n        createData(4, 'histories', '2kinghenryiv', frequency)\n    ];\n\n    return (\n        <div style={{ marginTop: '5%' }}>\n            <div>\n                <Link to='/search' color='black' style={{ marginLeft: '80%' }}>\n                    Go Back To Search\n                </Link>\n            </div>\n\n            <Typography variant='h6' style={{ marginRight: '76%' }}>\n                You searched for the term: {term}\n            </Typography>\n\n            <TableContainer sx={{ maxHeight: 440, marginTop: '2%' }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    {column.format && typeof value === 'number'\n                                                        ? column.format(value)\n                                                        : value}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n        </div >\n    )\n\n}","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/TopNPage.js",["55"],"import React, { useState } from 'react';\nimport { Typography, Button, TextField } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const TopNPage = (props) => {\n    const [n, setN] = useState('');\n    const submitSearch = () => {\n        props.history.push(`/inverted_indices?n=${n}`);\n    }\n    return (\n        <div style={{ marginTop: '10%' }}>\n            <Typography variant='h4' style={{ fontWeight: \"bold\" }}>\n                Enter Your N Value\n            </Typography>\n            <TextField\n                id=\"outlined-basic\"\n                variant=\"outlined\"\n                placeholder=\"Type Your N\"\n                style={{ marginTop: '3%', width: '20%' }}\n                onChange={e => setN(e.target.value)}\n                 />\n            <div>\n                <Button variant=\"outlined\" color='primary' style={{ marginTop: '3%', width: '15%' }} onClick={submitSearch}>\n                    Search\n                </Button>\n            </div>\n        </div>\n    )\n\n}","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/InvertedIndicesPage.js",["56"],"import React, { useState } from 'react';\nimport { Typography, Button, TextField } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\n\nexport const InvertedIndicesPage = (props) => {\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n    const n = query.get('n');\n    const submitSearch = () => {\n        props.history.push(`/top_n_result?n=${n}`);\n    }\n    return (\n\n        <div style={{ marginTop: '10%' }}>\n            <Typography variant='h4' style={{ fontWeight: \"bold\" }}>\n                Inverted Indices were constructed successfully!\n            </Typography>\n            <TextField\n                id=\"outlined-basic\"\n                variant=\"outlined\"\n                value={n}\n                style={{ width: '20%', marginTop: '3%' }} />\n            <div>\n                <Button variant=\"outlined\" color='primary' style={{ width: '15%', marginTop: '3%' }} onClick={submitSearch}>\n                    Search\n                </Button>\n            </div>\n        </div>\n    )\n\n}","/Users/apple/Desktop/cloud_infra_final_project/client/src/pages/TopNResultPage.js",["57","58","59","60","61","62","63"],"import React, { useState, useEffect } from 'react';\nimport { Typography, TableContainer, Table, TableBody, TableHead, TableCell, TableRow } from '@mui/material';\nimport { Link, useLocation } from 'react-router-dom';\nimport './TopNResultPage.css'\n\nexport const TopNResultPage = () => {\n    const [topN, setTopN] = useState([]);\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n    const n = query.get('n');\n\n    const getTopN = async () => {\n        const body = { n }\n        const content = JSON.stringify(body)\n        const res = await fetch('http://127.0.0.1:5000/top', {\n            method: 'POST',\n            body: content,\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json'\n            }\n        }).then(response => response.json())\n        setTopN(res);\n    }\n\n    useEffect(() => {\n        getTopN()\n\n    }, [])\n\n    return (\n\n        <div style={{ marginTop: '5%' }}>\n            <div>\n                <Link to='/top_n' style={{ marginLeft: '80%', color: 'black' }}>\n                    Go Back To Search\n                </Link>\n            </div>\n            <Typography variant='h6' style={{ marginRight: '54%' }}>\n                Top-N Frequent Terms\n            </Typography>\n            <div style={{ width: '70%', marginLeft: '16%', marginTop: '3%'}}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>Term</th>\n                            <th>Frequencies</th>\n                        </tr>\n                        {topN.map((res, index) => (\n                            <tr key={index}>\n                                <td>{res[1]}</td>\n                                <td>{res[0]}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div >\n    )\n\n}",{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":15,"column":3,"nodeType":"66","messageId":"67","endLine":15,"endColumn":11},{"ruleId":"64","severity":1,"message":"69","line":2,"column":88,"nodeType":"66","messageId":"67","endLine":2,"endColumn":93},{"ruleId":"70","severity":1,"message":"71","line":27,"column":8,"nodeType":"72","endLine":27,"endColumn":10,"suggestions":"73"},{"ruleId":"64","severity":1,"message":"74","line":3,"column":10,"nodeType":"66","messageId":"67","endLine":3,"endColumn":14},{"ruleId":"64","severity":1,"message":"75","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"76","line":2,"column":22,"nodeType":"66","messageId":"67","endLine":2,"endColumn":36},{"ruleId":"64","severity":1,"message":"77","line":2,"column":38,"nodeType":"66","messageId":"67","endLine":2,"endColumn":43},{"ruleId":"64","severity":1,"message":"78","line":2,"column":45,"nodeType":"66","messageId":"67","endLine":2,"endColumn":54},{"ruleId":"64","severity":1,"message":"79","line":2,"column":56,"nodeType":"66","messageId":"67","endLine":2,"endColumn":65},{"ruleId":"64","severity":1,"message":"80","line":2,"column":67,"nodeType":"66","messageId":"67","endLine":2,"endColumn":76},{"ruleId":"64","severity":1,"message":"81","line":2,"column":78,"nodeType":"66","messageId":"67","endLine":2,"endColumn":86},{"ruleId":"70","severity":1,"message":"82","line":29,"column":8,"nodeType":"72","endLine":29,"endColumn":10,"suggestions":"83"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFrequency'. Either include it or remove the dependency array.","ArrayExpression",["84"],"'Link' is defined but never used.","'useState' is defined but never used.","'TableContainer' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","React Hook useEffect has a missing dependency: 'getTopN'. Either include it or remove the dependency array.",["85"],{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [getFrequency]",{"range":"90","text":"91"},"Update the dependencies array to be: [getTopN]",{"range":"92","text":"93"},[964,966],"[getFrequency]",[945,947],"[getTopN]"]