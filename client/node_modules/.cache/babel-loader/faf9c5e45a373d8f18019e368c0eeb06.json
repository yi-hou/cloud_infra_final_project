{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/cloud infrastructufe/client_side/src/pages/TopNResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, TableContainer, Table, TableBody, TableHead, TableCell, TableRow } from '@mui/material';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TopNResultPage = () => {\n  _s();\n\n  const [topN, setTopN] = useState([]);\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n  const n = query.get('n');\n\n  const getTopN = async () => {\n    const body = {\n      n\n    };\n    const content = JSON.stringify(body);\n    const res = await fetch('http://127.0.0.1:5000/top', {\n      method: 'POST',\n      body: content,\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        'Accept': 'application/json'\n      }\n    }).then(response => response.json());\n    setTopN(res);\n  };\n\n  useEffect(() => {\n    getTopN();\n  }, []);\n\n  function createData(Term, Total_Frequencies) {\n    return {\n      Term,\n      Total_Frequencies\n    };\n  }\n\n  const columns = [{\n    id: 'Term',\n    label: 'Term',\n    minWidth: 170\n  }, {\n    id: 'Total_Frenquencies',\n    label: 'Total\\u00a0Frequencies',\n    minWidth: 170\n  }];\n  const rows = [];\n\n  function createRow() {\n    topN.map((word, idx) => rows.push(createData(word[1], word[0].toString())));\n  }\n\n  createRow();\n  console.log(\"===create data===\", topN);\n  console.log('===rows===', rows);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '5%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/top_n\",\n        style: {\n          marginLeft: '80%',\n          color: 'black'\n        },\n        children: \"Go Back To Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        marginRight: '84%'\n      },\n      children: \"Top-N Frequent Terms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                console.log(\"===value===\", value, rw);\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 49\n                }, this) // <div>\n                //         <TableCell key={column.id} align={column.align}>\n                //             {/* {column.format && typeof value === 'number'\n                //                 ? column.format(value)\n                //                 : value} */}\n                //                 {row.Term}\n                //         </TableCell>\n                //         <TableCell key={column.id} align={column.align}>\n                //             {/* {column.format && typeof value === 'number'\n                //                 ? column.format(value)\n                //                 : value} */}\n                //                 {row.Total_Frequencies}\n                //         </TableCell>\n                // </div>\n                ;\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TopNResultPage, \"Q0+FXtD9ti8V1gtJVAJPMU1YN+s=\", false, function () {\n  return [useLocation];\n});\n\n_c = TopNResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopNResultPage\");","map":{"version":3,"sources":["/Users/apple/Documents/cloud infrastructufe/client_side/src/pages/TopNResultPage.js"],"names":["React","useState","useEffect","Typography","TableContainer","Table","TableBody","TableHead","TableCell","TableRow","Link","useLocation","TopNResultPage","topN","setTopN","location","query","URLSearchParams","search","n","get","getTopN","body","content","JSON","stringify","res","fetch","method","headers","then","response","json","createData","Term","Total_Frequencies","columns","id","label","minWidth","rows","createRow","map","word","idx","push","toString","console","log","marginTop","marginLeft","color","marginRight","maxHeight","column","align","row","value","rw","format","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, TableContainer, Table, TableBody, TableHead, TableCell, TableRow } from '@mui/material';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const TopNResultPage = () => {\n    const [topN, setTopN] = useState([]);\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n    const n = query.get('n');\n\n    const getTopN = async () => {\n        const body = { n }\n        const content = JSON.stringify(body)\n        const res = await fetch('http://127.0.0.1:5000/top', {\n            method: 'POST',\n            body: content,\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n                'Accept': 'application/json'\n            }\n        }).then(response => response.json())\n        setTopN(res);\n    }\n\n    useEffect(() => {\n        getTopN()\n\n    }, [])\n\n\n    function createData(Term, Total_Frequencies) {\n        return { Term, Total_Frequencies };\n    }\n    const columns = [\n        { id: 'Term', label: 'Term', minWidth: 170 },\n        { id: 'Total_Frenquencies', label: 'Total\\u00a0Frequencies', minWidth: 170 },\n    ];\n    const rows = []\n    function createRow() {\n        topN.map((word, idx) => (rows.push(createData(word[1], word[0].toString()))))\n    }\n    createRow()\n    console.log(\"===create data===\", topN)\n    console.log('===rows===', rows)\n    return (\n\n        <div style={{ marginTop: '5%' }}>\n            <div>\n                <Link to='/top_n' style={{ marginLeft: '80%', color: 'black' }}>\n                    Go Back To Search\n                </Link>\n            </div>\n            <Typography variant='h6' style={{ marginRight: '84%' }}>\n                Top-N Frequent Terms\n            </Typography>\n\n\n            <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows\n                            .map((row) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                                        {columns.map((column) => {\n                                            const value = row[column.id];\n                                            console.log(\"===value===\", value, rw)\n                                            return (\n                                                <TableCell key={column.id} align={column.align}>\n                                                    {column.format && value}\n\n                                                </TableCell>\n                                                // <div>\n                                                //         <TableCell key={column.id} align={column.align}>\n                                                //             {/* {column.format && typeof value === 'number'\n                                                //                 ? column.format(value)\n                                                //                 : value} */}\n                                                //                 {row.Term}\n                                                //         </TableCell>\n                                                //         <TableCell key={column.id} align={column.align}>\n                                                //             {/* {column.format && typeof value === 'number'\n                                                //                 ? column.format(value)\n                                                //                 : value} */}\n                                                //                 {row.Total_Frequencies}\n                                                //         </TableCell>\n                                                // </div>\n                                            );\n                                        })}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n        </div >\n    )\n\n}"]},"metadata":{},"sourceType":"module"}